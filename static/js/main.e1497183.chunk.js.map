{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","increment","setState","counter","state","decrement","console","log","clearInterval","this","intervalId","setInterval","name","onClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAsCeA,E,kDAnCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAkBRC,UAAY,kBAAM,EAAKC,SAAS,CAACC,QAAS,EAAKC,MAAMD,QAAU,KAnB5C,EAoBnBE,UAAY,kBAAM,EAAKH,SAAS,CAACC,QAAS,EAAKC,MAAMD,QAAU,KAlB7DG,QAAQC,IAAIP,GACZ,EAAKI,MAAQ,CACXD,QAAS,IAJM,E,wDAOnB,WACEG,QAAQC,IAAI,aACZC,cAAcC,KAAKC,c,+BAGrB,WACED,KAAKC,WAAaC,aAAY,WAC5BL,QAAQC,IAAI,gBACX,O,oBAOL,WACE,IAAOK,EAAQH,KAAKT,MAAbY,KACP,OACE,gCACE,sCAASA,KACT,wCAAWH,KAAKL,MAAMD,WACtB,wBAAQU,QAASJ,KAAKR,UAAtB,uBACA,wBAAQY,QAASJ,KAAKJ,UAAtB,8B,GA9BUS,IAAMC,WCUTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAKf,KAAK,YAEZgB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e1497183.chunk.js","sourcesContent":["import React from 'react'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n    this.state = {\n      counter: 10\n    };\n  }\n  componentWillUnmount(){\n    console.log(\"unmom=unt\")\n    clearInterval(this.intervalId)\n  }\n\n  componentDidMount(){\n    this.intervalId = setInterval(() => {\n      console.log(\"intervalId\")\n    }, 1000);\n\n  }\n  \n  increment = () => this.setState({counter: this.state.counter + 1});\n  decrement = () => this.setState({counter: this.state.counter - 1});\n\n  render() {\n    const {name} = this.props;\n    return (\n      <div>\n        <h1>Hey {name}</h1>\n        <h2>It is {this.state.counter}</h2>\n        <button onClick={this.increment}>Increment</button>\n        <button onClick={this.decrement}>Decrement</button>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App name=\"Mohan\"/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}